/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2017-05-01 05:51:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.role;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.context.ConfigurationContext;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;
import org.owasp.encoder.Encode;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.wso2.carbon.user.mgt.stub.types.carbon.FlaggedName;
import org.wso2.carbon.user.mgt.stub.types.carbon.UserRealmInfo;
import org.wso2.carbon.user.mgt.stub.types.carbon.UserStoreInfo;
import org.wso2.carbon.user.mgt.ui.PaginatedNamesBean;
import org.wso2.carbon.user.mgt.ui.UserAdminClient;
import org.wso2.carbon.user.mgt.ui.UserAdminUIConstants;
import org.wso2.carbon.user.mgt.ui.UserManagementWorkflowServiceClient;
import org.wso2.carbon.user.mgt.ui.UserStoreCountClient;
import org.wso2.carbon.user.mgt.ui.Util;
import org.wso2.carbon.utils.ServerConstants;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;

public final class role_002dmgt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1482326920000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1482326920000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"../userstore/extensions/js/vui.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../identity/validation/js/identity-validate.js\"></script>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write('\n');
      out.write('\n');

    String BUNDLE = "org.wso2.carbon.userstore.ui.i18n.Resources";
    ResourceBundle resourceBundle = ResourceBundle.getBundle(BUNDLE, request.getLocale());

    boolean error = false;
    boolean newFilter = false;
    boolean doRoleList = true;
    boolean showFilterMessage = false;
    boolean multipleUserStores = false;
    List<FlaggedName> datasList= null;
    FlaggedName[] roles = null;
    FlaggedName exceededDomains = null;
    String[] domainNames = null;
    int pageNumber = 0;
    int cachePages = 3;
    int noOfPageLinksToDisplay = 5;
    int numberOfPages = 0;
    Map<Integer, PaginatedNamesBean> flaggedNameMap = null;
    UserRealmInfo userRealmInfo = null;
    Set<FlaggedName> workFlowAddPendingRoles = new LinkedHashSet<FlaggedName>();
    Set<String> workFlowAddPendingRolesList = new LinkedHashSet<String>();
    Set<String> workFlowDeletePendingRoles = null;
    Set<FlaggedName> activeRoleList;
    Set<FlaggedName> showDeletePendingRoles = new LinkedHashSet<FlaggedName>();
    Set<String> showDeletePendingRolesList = new LinkedHashSet<String>();
    Set<FlaggedName> aggregateRoleList = new LinkedHashSet<FlaggedName>();
    Set<FlaggedName> removeRoleElement = new LinkedHashSet<FlaggedName>();
    Set<String> countableUserStores = new LinkedHashSet<String>();
    Map<String, String> roleCount = new HashMap<String, String>();

    // clear session data
    session.removeAttribute("roleBean");
    session.removeAttribute(UserAdminUIConstants.ROLE_READ_ONLY);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_UNASSIGNED_USER_CACHE);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_UNASSIGNED_USER_CACHE_EXCEEDED);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_ASSIGNED_USER_CACHE);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_ASSIGNED_USER_CACHE_EXCEEDED);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_ADD_ROLE_USER_CACHE);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_ADD_ROLE_USER_CACHE_EXCEEDED);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_ASSIGN_USER_FILTER);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_UNASSIGNED_USER_FILTER);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_VIEW_USER_FILTER);
    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_CACHE);
    session.removeAttribute("previousRole");
    // search filter
    String selectedDomain = request.getParameter("domain");
    if (StringUtils.isBlank(selectedDomain)) {
        selectedDomain = (String) session.getAttribute(UserAdminUIConstants.ROLE_LIST_DOMAIN_FILTER);
        if (StringUtils.isBlank(selectedDomain)) {
            selectedDomain = UserAdminUIConstants.ALL_DOMAINS;
        }
    } else {
        newFilter = true;
    }


    //  search filter for count
    String selectedCountDomain = request.getParameter("countDomain");
    if (StringUtils.isBlank(selectedCountDomain)) {
        selectedCountDomain = (String) session.getAttribute(UserAdminUIConstants.USER_LIST_COUNT_DOMAIN_FILTER);
        if (StringUtils.isBlank(selectedCountDomain)) {
            selectedCountDomain = UserAdminUIConstants.ALL_DOMAINS;
        }
    } else {
        newFilter = true;
    }

    session.setAttribute(UserAdminUIConstants.ROLE_LIST_DOMAIN_FILTER, selectedDomain.trim());
    session.setAttribute(UserAdminUIConstants.ROLE_LIST_COUNT_DOMAIN_FILTER, selectedCountDomain.trim());

    String filter = request.getParameter(UserAdminUIConstants.ROLE_LIST_FILTER);
    if (StringUtils.isBlank(filter)) {
        filter = (String) session.getAttribute(UserAdminUIConstants.ROLE_LIST_FILTER);
        if (StringUtils.isBlank(filter)) {
            filter = "*";
        }
    } else {
        if (filter.contains(UserAdminUIConstants.DOMAIN_SEPARATOR)) {
            selectedDomain = UserAdminUIConstants.ALL_DOMAINS;
            session.removeAttribute(UserAdminUIConstants.ROLE_LIST_DOMAIN_FILTER);
        }
        newFilter = true;
    }


    String countFilter = request.getParameter(UserAdminUIConstants.ROLE_COUNT_FILTER);
    if (StringUtils.isBlank(countFilter)) {
        countFilter = (java.lang.String) session.getAttribute(UserAdminUIConstants.ROLE_COUNT_FILTER);
        if (StringUtils.isBlank(countFilter)) {
            countFilter = "%";
        }
    } else {
        if (countFilter.contains(UserAdminUIConstants.DOMAIN_SEPARATOR)) {
            selectedDomain = UserAdminUIConstants.ALL_DOMAINS;
            session.removeAttribute(UserAdminUIConstants.USER_LIST_DOMAIN_FILTER);
        }
        newFilter = true;
    }

    String modifiedFilter = filter.trim();
    if (!UserAdminUIConstants.ALL_DOMAINS.equalsIgnoreCase(selectedDomain)) {
        modifiedFilter = selectedDomain + UserAdminUIConstants.DOMAIN_SEPARATOR + filter;
        modifiedFilter = modifiedFilter.trim();
    }

    session.setAttribute(UserAdminUIConstants.ROLE_LIST_FILTER, filter.trim());
    session.setAttribute(UserAdminUIConstants.ROLE_COUNT_FILTER, countFilter.trim());

    String currentUser = (String) session.getAttribute("logged-user");
    userRealmInfo = (UserRealmInfo) session.getAttribute(UserAdminUIConstants.USER_STORE_INFO);
    if (userRealmInfo != null) {
        multipleUserStores = userRealmInfo.getMultipleUserStore();
    }
    String errorAttribute = (String) session.getAttribute(UserAdminUIConstants.DO_ROLE_LIST);
    exceededDomains = (FlaggedName) session.getAttribute(UserAdminUIConstants.ROLE_LIST_CACHE_EXCEEDED);

    // check page number
    try {

        pageNumber = Integer.parseInt(request.getParameter("pageNumber"));

    } catch (NumberFormatException ignored) {
        // page number format exception
        pageNumber = 0;
    }

    flaggedNameMap = (Map<Integer, PaginatedNamesBean>) session.getAttribute(UserAdminUIConstants.ROLE_LIST_CACHE);
    if (flaggedNameMap != null) {
        PaginatedNamesBean bean = flaggedNameMap.get(pageNumber);
        if (bean != null) {
            roles = bean.getNames();
            if (!ArrayUtils.isEmpty(roles)) {
                numberOfPages = bean.getNumberOfPages();
                doRoleList = false;
            }
        }
    }

    if (errorAttribute != null) {
        error = true;
        session.removeAttribute(UserAdminUIConstants.DO_ROLE_LIST);
    }

    if ((doRoleList || newFilter) && !error) {

        try {
            String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
            String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
            ConfigurationContext configContext =
                    (ConfigurationContext) config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
            UserAdminClient client = new UserAdminClient(cookie, backendServerURL, configContext);
            UserStoreCountClient countClient = new UserStoreCountClient(cookie, backendServerURL, configContext);
            UserManagementWorkflowServiceClient UserMgtClient = new
                    UserManagementWorkflowServiceClient(cookie, backendServerURL, configContext);
            countableUserStores = countClient.getCountableUserStores();

            if(countableUserStores != null && countableUserStores.size() > 0) {
                countableUserStores.add(UserAdminUIConstants.ALL_DOMAINS);
                countableUserStores.add(UserAdminUIConstants.INTERNAL_DOMAIN);
                countableUserStores.add(UserAdminUIConstants.APPLICATION_DOMAIN);
            }

            if (selectedCountDomain.equalsIgnoreCase(UserAdminUIConstants.ALL_DOMAINS)) {
                roleCount = countClient.countRoles(countFilter);
            } else {
                roleCount.put(selectedCountDomain, String.valueOf(countClient.countRolesInDomain(countFilter, selectedCountDomain)));
            }

            boolean sharedRoleEnabled = client.isSharedRolesEnabled();
            session.setAttribute(UserAdminUIConstants.SHARED_ROLE_ENABLED, sharedRoleEnabled);
            if (filter.length() > 0) {
                FlaggedName[] datas = client.getAllRolesNames(modifiedFilter, -1);
                if (CarbonUIUtil.isContextRegistered(config, "/usermgt-workflow/")) {
                    List<FlaggedName> preactiveRoleList = new ArrayList<FlaggedName>(Arrays.asList(datas));
                    FlaggedName excessiveDomainElement = preactiveRoleList.remove(datas.length - 1);
                    removeRoleElement.add(excessiveDomainElement);

                    activeRoleList = new LinkedHashSet<FlaggedName>(preactiveRoleList);

                    String[] AddPendingRolesList = UserMgtClient.
                            listAllEntityNames("ADD_ROLE", "PENDING", "ROLE", modifiedFilter);

                    workFlowAddPendingRolesList = new LinkedHashSet<String>(Arrays.asList(AddPendingRolesList));

                    for (String s : AddPendingRolesList) {
                        FlaggedName flaggedName = new FlaggedName();
                        flaggedName.setItemName(s);
                        flaggedName.setEditable(true);
                        workFlowAddPendingRoles.add(flaggedName);
                    }

                    String[] DeletePendingUsersList = UserMgtClient.
                            listAllEntityNames("DELETE_ROLE", "PENDING", "ROLE", modifiedFilter);
                    workFlowDeletePendingRoles = new LinkedHashSet<String>(Arrays.asList(DeletePendingUsersList));

                    for (Iterator<FlaggedName> iterator = activeRoleList.iterator(); iterator.hasNext(); ) {
                        FlaggedName flaggedName = iterator.next();
                        if (flaggedName == null) {
                            continue;
                        }
                        String userName = flaggedName.getItemName();
                        if (workFlowDeletePendingRoles.contains(userName)) {
                            showDeletePendingRoles.add(flaggedName);
                            showDeletePendingRolesList.add(userName);
                            iterator.remove();
                        }
                    }
                    aggregateRoleList.addAll(activeRoleList);
                    aggregateRoleList.addAll(showDeletePendingRoles);
                    aggregateRoleList.addAll(workFlowAddPendingRoles);
                    aggregateRoleList.addAll(removeRoleElement);
                    datas = aggregateRoleList.toArray(new FlaggedName[aggregateRoleList.size()]);
                }
                datasList = new ArrayList<FlaggedName>(Arrays.asList(datas));
                exceededDomains = datasList.remove(datasList.size() - 1);
                session.setAttribute(UserAdminUIConstants.ROLE_LIST_CACHE_EXCEEDED, exceededDomains);
                datas = datasList.toArray(new FlaggedName[datasList.size()]);
                if (datas == null || datas.length == 0) {
                    session.removeAttribute(UserAdminUIConstants.ROLE_LIST_FILTER);
                    showFilterMessage = true;
                }
            }
            if (userRealmInfo == null) {
                userRealmInfo = client.getUserRealmInfo();
                session.setAttribute(UserAdminUIConstants.USER_STORE_INFO, userRealmInfo);
            }

            if (datasList != null) {
                flaggedNameMap = new HashMap<Integer, PaginatedNamesBean>();
                int max = pageNumber + cachePages;
                for (int i = (pageNumber - cachePages); i < max; i++) {
                    if (i < 0) {
                        max++;
                        continue;
                    }
                    PaginatedNamesBean bean = Util.retrievePaginatedFlaggedName(i, datasList);
                    flaggedNameMap.put(i, bean);
                    if (bean.getNumberOfPages() == i + 1) {
                        break;
                    }
                }
                roles = flaggedNameMap.get(pageNumber).getNames();
                numberOfPages = flaggedNameMap.get(pageNumber).getNumberOfPages();
                session.setAttribute(UserAdminUIConstants.ROLE_LIST_CACHE, flaggedNameMap);
            }
        } catch (Exception e) {
            String message = MessageFormat.format(resourceBundle.getString("error.while.role.filtered"),
                    e.getMessage());

      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    jQuery(document).ready(function () {\n");
      out.write("        CARBON.showErrorDialog('");
      out.print(Encode.forJavaScript(Encode.forHtml(message)));
      out.write("', null);\n");
      out.write("    });\n");
      out.write("</script>\n");

        }
    }

    if (userRealmInfo != null) {
        List<String> list = new ArrayList<String>();

        UserStoreInfo[]  allUserStoreInfo = userRealmInfo.getUserStoresInfo();
        if (allUserStoreInfo != null && allUserStoreInfo.length > 0) {
            for (int i = 0; i < allUserStoreInfo.length; i++) {
                if (allUserStoreInfo[i] != null) {
                    if (allUserStoreInfo[i].getDomainName() != null && allUserStoreInfo[i].getReadGroupsEnabled()) {
                        list.add(allUserStoreInfo[i].getDomainName());
                    }
                }
            }
        }

        list.add(UserAdminUIConstants.ALL_DOMAINS);
        list.add(UserAdminUIConstants.INTERNAL_DOMAIN);
        list.add(UserAdminUIConstants.APPLICATION_DOMAIN);
        //list.add(UserAdminUIConstants.WORKFLOW_DOMAIN);
        domainNames = list.toArray(new String[list.size()]);
    }

      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /role/role-mgt.jsp(334,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.userstore.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.pushBody();
            _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
            _jspx_th_fmt_005fbundle_005f0.doInitBody();
          }
          do {
            out.write('\n');
            //  carbon:breadcrumb
            org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
            try {
              _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /role/role-mgt.jsp(335,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("roles");
              // /role/role-mgt.jsp(335,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.userstore.ui.i18n.Resources");
              // /role/role-mgt.jsp(335,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
              // /role/role-mgt.jsp(335,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
              int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
              if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } finally {
              _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
            }
            out.write("\n");
            out.write("\n");
            out.write("    <script type=\"text/javascript\">\n");
            out.write("\n");
            out.write("        function deleteUserGroup(role) {\n");
            out.write("            function doDelete() {\n");
            out.write("                var roleName = role;\n");
            out.write("                $.ajax({\n");
            out.write("                    type: 'POST',\n");
            out.write("                    url: 'delete-finish-ajaxprocessor.jsp',\n");
            out.write("                    headers: {\n");
            out.write("                        Accept: \"text/html\"\n");
            out.write("                    },\n");
            out.write("                    data: 'roleName=' + roleName + '&userType=internal',\n");
            out.write("                    async: false,\n");
            out.write("                    success: function (responseText, status) {\n");
            out.write("                        if (status == \"success\") {\n");
            out.write("                            location.assign(\"role-mgt.jsp\");\n");
            out.write("                        }\n");
            out.write("                    }\n");
            out.write("                });\n");
            out.write("            }\n");
            out.write("\n");
            out.write("            CARBON.showConfirmationDialog('");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" ' + role + '?', doDelete, null);\n");
            out.write("        }\n");
            out.write("\n");
            out.write("        ");
if (showFilterMessage) {
            out.write("\n");
            out.write("        jQuery(document).ready(function () {\n");
            out.write("            CARBON.showInfoDialog('");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("', null, null);\n");
            out.write("        });\n");
            out.write("        ");
}
            out.write("\n");
            out.write("        /*function doDelete(){\n");
            out.write("            location.href = 'delete-role.jsp?roleName=' + this.role+'&userType=internal';\n");
            out.write("        }*/\n");
            out.write("    </script>\n");
            out.write("    <script type=\"text/javascript\">\n");
            out.write("\n");
            out.write("        function updateUserGroup(role) {\n");
            out.write("                var roleName = role;\n");
            out.write("                location.href = 'rename-role.jsp?roleName=' + roleName;\n");
            out.write("        }\n");
            out.write("\n");
            out.write("    </script>\n");
            out.write("    <div id=\"middle\">\n");
            out.write("        <h2>");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</h2>\n");
            out.write("\n");
            out.write("        <div id=\"workArea\">\n");
            out.write("\n");
            out.write("            <form name=\"filterForm\" method=\"post\" action=\"role-mgt.jsp\">\n");
            out.write("                <table class=\"styledLeft noBorders\">\n");
            out.write("                    <thead>\n");
            out.write("                    <tr>\n");
            out.write("                        <th colspan=\"2\">");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                    </tr>\n");
            out.write("                    </thead>\n");
            out.write("                    <tbody>\n");
            out.write("                    ");

                        if (ArrayUtils.isNotEmpty(domainNames)) {
                    
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-big\" style=\"padding-right: 0 !important;\">");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td><select id=\"domain\" name=\"domain\">\n");
            out.write("                            ");

                                for (String domainName : domainNames) {
                                    if (selectedDomain.equals(domainName)) {
                            
            out.write("\n");
            out.write("                            <option selected=\"selected\"\n");
            out.write("                                    value=\"");
            out.print(Encode.forHtmlAttribute(domainName));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(domainName));
            out.write("\n");
            out.write("                            </option>\n");
            out.write("                            ");

                            } else {
                            
            out.write("\n");
            out.write("                            <option value=\"");
            out.print(Encode.forHtmlAttribute(domainName));
            out.write("\">\n");
            out.write("                                ");
            out.print(Encode.forHtmlContent(domainName));
            out.write("\n");
            out.write("                            </option>\n");
            out.write("                            ");

                                    }
                                }
                            
            out.write("\n");
            out.write("                        </select>\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                    ");

                        }
                    
            out.write("\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-big\" style=\"padding-right: 0 !important;\">");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td>\n");
            out.write("                            <input type=\"text\" name=\"");
            out.print(UserAdminUIConstants.ROLE_LIST_FILTER);
            out.write("\"\n");
            out.write("                                   value=\"");
            out.print(Encode.forHtmlAttribute(filter));
            out.write("\" label=\"");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                   black-list-patterns=\"xml-meta-exists\"/>\n");
            out.write("\n");
            out.write("                            <input class=\"button\" type=\"submit\"\n");
            out.write("                                   value=\"");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"/>\n");
            out.write("                        </td>\n");
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("                    </tbody>\n");
            out.write("                </table>\n");
            out.write("            </form>\n");
            out.write("\n");
            out.write("            <form name=\"countForm\" method=\"post\" action=\"role-mgt.jsp\">\n");
            out.write("                <table class=\"styledLeft\">\n");
            out.write("                    ");

                        if (countableUserStores != null && !countableUserStores.isEmpty()) {
                    
            out.write("\n");
            out.write("                    <thead>\n");
            out.write("                    <tr>\n");
            out.write("                        <th colspan=\"2\">");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                    </tr>\n");
            out.write("                    </thead>\n");
            out.write("                    <tbody>\n");
            out.write("\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-big\" style=\"padding-right: 0 !important;\">");
            if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td><select id=\"countDomain\" name=\"countDomain\">\n");
            out.write("                            ");

                                for (String domainName : countableUserStores) {
                                    if (selectedDomain.equals(domainName)) {
                            
            out.write("\n");
            out.write("                            <option selected=\"selected\" value=\"");
            out.print(Encode.forHtmlAttribute(domainName));
            out.write("\">\n");
            out.write("                                ");
            out.print(Encode.forHtml(domainName));
            out.write("\n");
            out.write("                            </option>\n");
            out.write("                            ");

                            } else {
                            
            out.write("\n");
            out.write("                            <option value=\"");
            out.print(Encode.forHtmlAttribute(domainName));
            out.write("\">\n");
            out.write("                                ");
            out.print(Encode.forHtml(domainName));
            out.write("\n");
            out.write("                            </option>\n");
            out.write("                            ");

                                    }
                                }
                            
            out.write("\n");
            out.write("                        </select>\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-big\" style=\"padding-right: 0 !important;\">");
            if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                        <td>\n");
            out.write("                            <input type=\"text\" name=\"");
            out.print(UserAdminUIConstants.ROLE_COUNT_FILTER);
            out.write("\"\n");
            out.write("                                   value=\"");
            out.print(Encode.forHtmlAttribute(countFilter));
            out.write("\" label=\"");
            if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("                                   black-list-patterns=\"xml-meta-exists\"/>\n");
            out.write("\n");
            out.write("                            <input class=\"button\" type=\"submit\"\n");
            out.write("                                   value=\"");
            if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"/>\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    ");

                        Iterator it = roleCount.entrySet().iterator();
                        String key = null;
                        String value = null;
                        while (it.hasNext()) {
                            Map.Entry pair = (Map.Entry)it.next();
                            key = (String) pair.getKey();
                            value = (String) pair.getValue();
                    
            out.write("\n");
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td class=\"leftCol-big\" style=\"padding-right: 0 !important;\">");
            out.print(key);
            out.write("</td>\n");
            out.write("                        <td>\n");
            out.write("                            <input type=\"text\" readonly=true name=\"");
            out.print(UserAdminUIConstants.ROLE_COUNT);
            out.write("\"\n");
            out.write("                                   value=\"");
            out.print(Encode.forHtmlAttribute(value));
            out.write("\" />\n");
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("\n");
            out.write("                    ");
        it.remove();
                        }
                    
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("                    </tbody>\n");
            out.write("                    ");

                        }
                    
            out.write("\n");
            out.write("                </table>\n");
            out.write("            </form>\n");
            out.write("            <p>&nbsp;</p>\n");
            out.write("\n");
            out.write("            ");
            //  carbon:paginator
            org.wso2.carbon.ui.taglibs.Paginator _jspx_th_carbon_005fpaginator_005f0 = (org.wso2.carbon.ui.taglibs.Paginator) _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody.get(org.wso2.carbon.ui.taglibs.Paginator.class);
            try {
              _jspx_th_carbon_005fpaginator_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fpaginator_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /role/role-mgt.jsp(525,12) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f0.setPageNumber(pageNumber);
              // /role/role-mgt.jsp(525,12) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f0.setNumberOfPages(numberOfPages);
              // /role/role-mgt.jsp(525,12) name = noOfPageLinksToDisplay type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f0.setNoOfPageLinksToDisplay(noOfPageLinksToDisplay);
              // /role/role-mgt.jsp(525,12) name = page type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f0.setPage("role-mgt.jsp");
              // /role/role-mgt.jsp(525,12) name = pageNumberParameterName type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f0.setPageNumberParameterName("pageNumber");
              int _jspx_eval_carbon_005fpaginator_005f0 = _jspx_th_carbon_005fpaginator_005f0.doStartTag();
              if (_jspx_th_carbon_005fpaginator_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } finally {
              _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody.reuse(_jspx_th_carbon_005fpaginator_005f0);
            }
            out.write("\n");
            out.write("\n");
            out.write("            <table class=\"styledLeft\" id=\"roleTable\">\n");
            out.write("                ");

                    if (ArrayUtils.isNotEmpty(roles)) {
                
            out.write("\n");
            out.write("                <thead>\n");
            out.write("                <tr>\n");
            out.write("                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        ");
            out.write("\n");
            out.write("                    <th>");
            if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                </tr>\n");
            out.write("                </thead>\n");
            out.write("                ");

                    }
                
            out.write("\n");
            out.write("                <tbody>\n");
            out.write("                ");

                    if (ArrayUtils.isNotEmpty(roles)) {
                        for (FlaggedName data : roles) {
                            if (data != null) {
                                if (CarbonConstants.REGISTRY_ANONNYMOUS_ROLE_NAME.equals(data.getItemName())) {
                                    continue;
                                }
                                if (userRealmInfo.getAdminRole().equals(data.getItemName()) &&
                                        !userRealmInfo.getAdminUser().equals(currentUser)) {
                                    continue;
                                }
                                String roleName = data.getItemName();
                                String displayName = data.getItemDisplayName();
                                if (displayName == null) {
                                    displayName = roleName;
                                }
                                if (workFlowAddPendingRolesList.contains(roleName)) {
                
            out.write("\n");
            out.write("                <tr>\n");
            out.write("                    <td>");
            out.print(Encode.forHtmlContent(displayName));
            out.write("\n");
            out.write("                        ");
if (!data.getEditable()) { 
            out.write(' ');
            out.print("(Read-Only)");
            out.write(' ');
 } 
            out.write("\n");
            out.write("                        <img src=\"images/workflow_pending_add.gif\" title=\"Workflow-pending-user-add\"\n");
            out.write("                             alt=\"Workflow-pending-user-add\" height=\"15\" width=\"15\">\n");
            out.write("                    </td>\n");
            out.write("                    <td>\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/view.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/delete.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                ");

                } else if (showDeletePendingRolesList.contains(roleName)) {
                
            out.write("\n");
            out.write("                   ");
            out.write("\n");
            out.write("                <tr>\n");
            out.write("                    <td>");
            out.print(Encode.forHtmlContent(displayName));
            out.write("\n");
            out.write("                        ");
if (!data.getEditable()) { 
            out.write(' ');
            out.print("(Read-Only)");
            out.write(' ');
 } 
            out.write("\n");
            out.write("                        <img src=\"images/workflow_pending_remove.gif\" title=\"Workflow-pending-user-delete\"\n");
            out.write("                             alt=\"Workflow-pending-user-delete\" height=\"15\" width=\"15\">\n");
            out.write("                    </td>\n");
            out.write("                    <td>\n");
            out.write("                        ");
if (!data.getShared()) { 
            out.write("\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 if (!data.getItemName().equals(userRealmInfo.getAdminRole())) {
            out.write("\n");
            out.write("                        <a href=\"edit-permissions.jsp?roleName=");
            out.print(Encode.forUriComponent(roleName));
            out.write("\" class=\"icon-link\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 }
                        }
            out.write("\n");
            out.write("\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("\n");
            out.write("                        ");
 if (!userRealmInfo.getEveryOneRole().equals(data.getItemName())) { 
            out.write("\n");
            out.write("                        <a href=\"view-users.jsp?roleName=");
            out.print(Encode.forUriComponent(roleName));
            out.write('&');
            out.print(UserAdminUIConstants.ROLE_READ_ONLY);
            out.write('=');
            out.print(!data.getEditable());
            out.write("\"\n");
            out.write("                           class=\"icon-link\" style=\"background-image:url(images/view.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 } 
            out.write("\n");
            out.write("\n");
            out.write("                        <a href=\"#\" class=\"icon-link\" title=\"Operation is Disabled\"\n");
            out.write("                           style=\"background-image:url(images/delete.gif);color:#CCC;\">");
            if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                ");

                } else {
                
            out.write("\n");
            out.write("                <tr>\n");
            out.write("                    <td>");
            out.print(Encode.forHtmlContent(displayName));
            out.write("\n");
            out.write("                        ");
if (!data.getEditable()) { 
            out.write(' ');
            out.print("(Read-Only)");
            out.write(' ');
 } 
            out.write("\n");
            out.write("                    </td>\n");
            out.write("                        ");
            out.write("\n");
            out.write("                    <td>\n");
            out.write("                        ");
if (!data.getShared()) { 
            out.write("\n");
            out.write("                        ");
 if (!data.getItemName().equals(userRealmInfo.getAdminRole()) && !data.getItemName().equals(userRealmInfo.getEveryOneRole()) && data.getEditable()) {
            out.write("\n");
            out.write("                        <a href=\"#\" onclick=\"updateUserGroup('");
            out.print(Encode.forJavaScriptAttribute(roleName));
            out.write("')\"\n");
            out.write("                           class=\"icon-link\" style=\"background-image:url(images/edit.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f25(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 } 
            out.write("\n");
            out.write("                        ");
 if (!data.getItemName().equals(userRealmInfo.getAdminRole())) {
            out.write("\n");
            out.write("                        <a href=\"edit-permissions.jsp?roleName=");
            out.print(Encode.forUriComponent(roleName));
            out.write("\" class=\"icon-link\"\n");
            out.write("                           style=\"background-image:url(images/edit.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f26(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 }
                        }
            out.write("\n");
            out.write("\n");
            out.write("                        ");
 if (!userRealmInfo.getEveryOneRole().equals(data.getItemName()) && data.getEditable()) { 
            out.write("\n");
            out.write("                        <a href=\"edit-users.jsp?roleName=");
            out.print(Encode.forUriComponent(roleName));
            out.write('&');
            out.print(UserAdminUIConstants.ROLE_READ_ONLY);
            out.write('=');
            out.print(!data.getEditable());
            out.write("\"\n");
            out.write("                           class=\"icon-link\" style=\"background-image:url(images/edit.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f27(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 } 
            out.write("\n");
            out.write("                        ");
 if (!userRealmInfo.getEveryOneRole().equals(data.getItemName())) { 
            out.write("\n");
            out.write("                        <a href=\"view-users.jsp?roleName=");
            out.print(Encode.forUriComponent(roleName));
            out.write('&');
            out.print(UserAdminUIConstants.ROLE_READ_ONLY);
            out.write('=');
            out.print(!data.getEditable());
            out.write("\"\n");
            out.write("                           class=\"icon-link\" style=\"background-image:url(images/view.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f28(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 } 
            out.write("\n");
            out.write("                        ");
if (!data.getShared()) { 
            out.write("\n");
            out.write("\n");
            out.write("                        ");
 if (!data.getItemName().equals(userRealmInfo.getAdminRole()) && !data.getItemName().equals(userRealmInfo.getEveryOneRole()) && data.getEditable()) {
            out.write("\n");
            out.write("                        <a href=\"#\" onclick=\"deleteUserGroup('");
            out.print(Encode.forJavaScriptAttribute(roleName));
            out.write("')\"\n");
            out.write("                           class=\"icon-link\" style=\"background-image:url(images/delete.gif);\">");
            if (_jspx_meth_fmt_005fmessage_005f29(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("                        ");
 }
                        } 
            out.write("\n");
            out.write("\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                ");

                    }
                
            out.write("\n");
            out.write("                ");

                            }
                        }
                    }
                
            out.write("\n");
            out.write("                </tbody>\n");
            out.write("            </table>\n");
            out.write("\n");
            out.write("            ");
            //  carbon:paginator
            org.wso2.carbon.ui.taglibs.Paginator _jspx_th_carbon_005fpaginator_005f1 = (org.wso2.carbon.ui.taglibs.Paginator) _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody.get(org.wso2.carbon.ui.taglibs.Paginator.class);
            try {
              _jspx_th_carbon_005fpaginator_005f1.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fpaginator_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /role/role-mgt.jsp(684,12) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPageNumber(pageNumber);
              // /role/role-mgt.jsp(684,12) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setNumberOfPages(numberOfPages);
              // /role/role-mgt.jsp(684,12) name = noOfPageLinksToDisplay type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setNoOfPageLinksToDisplay(noOfPageLinksToDisplay);
              // /role/role-mgt.jsp(684,12) name = page type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPage("role-mgt.jsp");
              // /role/role-mgt.jsp(684,12) name = pageNumberParameterName type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fpaginator_005f1.setPageNumberParameterName("pageNumber");
              int _jspx_eval_carbon_005fpaginator_005f1 = _jspx_th_carbon_005fpaginator_005f1.doStartTag();
              if (_jspx_th_carbon_005fpaginator_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } finally {
              _005fjspx_005ftagPool_005fcarbon_005fpaginator_0026_005fpageNumberParameterName_005fpageNumber_005fpage_005fnumberOfPages_005fnoOfPageLinksToDisplay_005fnobody.reuse(_jspx_th_carbon_005fpaginator_005f1);
            }
            out.write("\n");
            out.write("\n");
            out.write("            ");

                if (ArrayUtils.isNotEmpty(roles) && exceededDomains != null) {
                    if (exceededDomains.getItemName() != null || exceededDomains.getItemDisplayName() != null) {
                        String message = null;
                        if (Boolean.parseBoolean(exceededDomains.getItemName())) {
                            if (StringUtils.isNotBlank(exceededDomains.getItemDisplayName())) {
                                String arg = "";
                                String[] domains = exceededDomains.getItemDisplayName().split(":");
                                for (int i = 0; i < domains.length; i++) {
                                    arg += "\'" + domains[i] + "\'";
                                    if (i < domains.length - 2) {
                                        arg += ", ";
                                    } else if (i == domains.length - 2) {
                                        arg += " and ";
                                    }
                                }
                                message = MessageFormat.format(resourceBundle.getString("more.roles.others"), arg);
                            } else {
                                message = resourceBundle.getString("more.roles.primary");
                            }
            
            out.write("\n");
            out.write("            <strong>");
            out.print(Encode.forHtml(message));
            out.write("\n");
            out.write("            </strong>\n");
            out.write("            ");

            } else if (StringUtils.isNotBlank(exceededDomains.getItemDisplayName())) {
                String[] domains = exceededDomains.getItemDisplayName().split(":");
                String arg = "";
                for (int i = 0; i < domains.length; i++) {
                    arg += "\'" + domains[i] + "\'";
                    if (i < domains.length - 2) {
                        arg += ", ";
                    } else if (i == domains.length - 2) {
                        arg += " and ";
                    }
                }
                message = MessageFormat.format(resourceBundle.getString("more.roles"), arg);
            
            out.write("\n");
            out.write("            <strong>");
            out.print(Encode.forHtml(message));
            out.write("\n");
            out.write("            </strong>\n");
            out.write("            ");

                        }
                    }
                }
            
            out.write("\n");
            out.write("\n");
            out.write("        </div>\n");
            out.write("    </div>\n");
            out.write("    <script type=\"text/javascript\">\n");
            out.write("        alternateTableRows('roleTable', 'tableEvenRow', 'tableOddRow');\n");
            out.write("\n");
            out.write("        $(document).ready(function () {\n");
            out.write("            $('form[name=filterForm]').submit(function(){\n");
            out.write("                return doValidateForm(this, '");
            if (_jspx_meth_fmt_005fmessage_005f30(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            })\n");
            out.write("        });\n");
            out.write("    </script>\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(360,43) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("confirm.delete.role");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(365,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("no.roles.filtered");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(381,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("roles");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(389,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("role.search");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(397,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("select.domain.search");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(425,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("list.roles");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(429,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("list.roles");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(433,42) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("role.search");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(448,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("role.count");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(455,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("select.domain.search");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(481,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("role.count");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(485,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("count.roles");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(489,42) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("role.count");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(536,24) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("name");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(541,24) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("actions");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(574,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("rename");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(576,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("edit.permissions");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(579,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("edit.users");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(581,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("view.users");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(583,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(605,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("rename");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(608,74) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("edit.permissions");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(613,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("edit.users");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(617,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("view.users");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(622,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(643,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("rename");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(648,74) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f26.setKey("edit.permissions");
      int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f27(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f27 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f27.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(654,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f27.setKey("edit.users");
      int _jspx_eval_fmt_005fmessage_005f27 = _jspx_th_fmt_005fmessage_005f27.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f28 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(659,92) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f28.setKey("view.users");
      int _jspx_eval_fmt_005fmessage_005f28 = _jspx_th_fmt_005fmessage_005f28.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f29 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(666,94) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f29.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f29 = _jspx_th_fmt_005fmessage_005f29.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f30(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f30 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f30.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /role/role-mgt.jsp(741,45) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f30.setKey("error.input.validation.msg");
      int _jspx_eval_fmt_005fmessage_005f30 = _jspx_th_fmt_005fmessage_005f30.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
    }
    return false;
  }
}
