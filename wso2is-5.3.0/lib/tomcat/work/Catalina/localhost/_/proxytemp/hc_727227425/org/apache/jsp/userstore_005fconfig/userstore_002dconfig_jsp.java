/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2017-05-01 06:20:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.userstore_005fconfig;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.context.ConfigurationContext;
import org.owasp.encoder.Encode;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.identity.user.store.configuration.stub.api.Properties;
import org.wso2.carbon.identity.user.store.configuration.stub.api.Property;
import org.wso2.carbon.identity.user.store.configuration.ui.UserStoreUIConstants;
import org.wso2.carbon.identity.user.store.configuration.ui.client.UserStoreConfigAdminServiceClient;
import org.wso2.carbon.identity.user.store.configuration.ui.utils.UserStoreUIUtils;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.wso2.carbon.utils.ServerConstants;
import java.util.Iterator;
import java.util.Map;
import java.util.ResourceBundle;
import org.wso2.carbon.identity.user.store.configuration.stub.dto.UserStoreDTO;
import java.util.HashMap;
import org.wso2.carbon.identity.user.store.configuration.stub.dto.PropertyDTO;

public final class userstore_002dconfig_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


    private String propertyValue;
    private String propertyName;
    private Properties properties;
    private Property[] mandatories;
    private Property[] optionals;
    private Property[] advancedProperties;
    private String forwardTo;
    private String domain = "0";
    private String className = "0";
    private Boolean isEditing;
    private int isBoolean;
    private String existingDomains;
    private String messageID;
    private int i;

    private int isBoolean(String value) {
        int i = -123;
        if (value.equalsIgnoreCase("true")) {
            i = 1;
        } else if (value.equalsIgnoreCase("false")) {
            i = 0;
        }
        return i;
    }

    private static Map<String, String> convertArrayToMap(PropertyDTO[] properties) {
        Map<String, String> propertyMap = new HashMap<String, String>();
        for (PropertyDTO propertyDTO : properties) {
            if (propertyDTO.getValue() != null) {
                propertyMap.put(propertyDTO.getName(), propertyDTO.getValue());
            }
        }
        return propertyMap;
    }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1482326920000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1482326920000L));
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1482326920000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("/*\n");
      out.write("* Copyright (c) 2008, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n");
      out.write("*\n");
      out.write("* Licensed under the Apache License, Version 2.0 (the \"License\");\n");
      out.write("* you may not use this file except in compliance with the License.\n");
      out.write("* You may obtain a copy of the License at\n");
      out.write("*\n");
      out.write("* http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("*\n");
      out.write("* Unless required by applicable law or agreed to in writing, software\n");
      out.write("* distributed under the License is distributed on an \"AS IS\" BASIS,\n");
      out.write("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
      out.write("* See the License for the specific language governing permissions and\n");
      out.write("* limitations under the License.\n");
      out.write("*/\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /userstore_config/userstore-config.jsp(39,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.identity.user.store.configuration.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.pushBody();
            _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
            _jspx_th_fmt_005fbundle_005f0.doInitBody();
          }
          do {
            out.write('\n');
            //  carbon:breadcrumb
            org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
            try {
              _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /userstore_config/userstore-config.jsp(40,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("add.userstore");
              // /userstore_config/userstore-config.jsp(40,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.identity.user.store.configuration.ui.i18n.Resources");
              // /userstore_config/userstore-config.jsp(40,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(true);
              // /userstore_config/userstore-config.jsp(40,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
              int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
              if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
            } finally {
              _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
            }
            out.write('\n');

    String BUNDLE = "org.wso2.carbon.identity.user.store.configuration.ui.i18n.Resources";
    ResourceBundle resourceBundle = ResourceBundle.getBundle(BUNDLE, request.getLocale());

            out.write('\n');
            out.write('\n');

    domain = "0";
    className = "0";

    if (request.getParameter("domain") != null) {
        domain = request.getParameter("domain");
    }

    if (request.getParameter("className") != null) {
        className = request.getParameter("className");
    }
    String selectedClassApplied = null;
    String description = null;
    int rank;
    String[] classApplies = new String[0];

    if ("0".equals(className)) {
        selectedClassApplied = request.getParameter("classApplied");       //add
        isEditing = false;
    } else {
        selectedClassApplied = className;                                  //edit
        isEditing = true;
    }


    if (selectedClassApplied == null || selectedClassApplied.trim().length() == 0) {
        selectedClassApplied = UserStoreUIConstants.RWLDAP_USERSTORE_MANAGER;
    } else {

    }

    String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
    String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);
    ConfigurationContext configContext =
            (ConfigurationContext) config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);
    UserStoreConfigAdminServiceClient userStoreConfigAdminServiceClient = new UserStoreConfigAdminServiceClient(cookie, backendServerURL, configContext);
    classApplies = userStoreConfigAdminServiceClient.getAvailableUserStoreClasses();
    UserStoreDTO[] userStoreDTOs;
    Map<String, Map<String, String>> userStoreManagers = new HashMap<String, Map<String, String>>();
    userStoreDTOs = userStoreConfigAdminServiceClient.getActiveDomains();
    if (userStoreDTOs != null) {
        for (UserStoreDTO userStoreDTO : userStoreDTOs) {
            if (userStoreDTO != null) {
                userStoreManagers.put(userStoreDTO.getDomainId(), convertArrayToMap(userStoreDTO.getProperties()));
            }
        }
    }
    Iterator<String> iterator = userStoreManagers.keySet().iterator();

    existingDomains = "";
    while (iterator.hasNext()) {
        existingDomains = existingDomains + "\"" + iterator.next().toUpperCase() + "\",";
    }
    existingDomains = "[" + existingDomains + "\"PRIMARY\"]";

    if (!"0".equals(domain)) {

        //Get the defined properties of user store manager
        Map<String, String> tempProperties = userStoreManagers.get(domain);
        className = tempProperties.get(UserStoreUIConstants.CLASS);
        description = tempProperties.get(UserStoreUIConstants.DESCRIPTION);

        String forwardTo = "index.jsp";
        properties = UserStoreUIUtils.mergePropertyValues(userStoreConfigAdminServiceClient.getUserStoreProperties(className), tempProperties);
        mandatories = properties.getMandatoryProperties();
        optionals = properties.getOptionalProperties();
        advancedProperties = properties.getAdvancedProperties();


    } else {
        if ((session.getAttribute(UserStoreUIConstants.DOMAIN)) != null) {
            domain = (String) session.getAttribute(UserStoreUIConstants.DOMAIN);
        }

        if ((session.getAttribute(UserStoreUIConstants.DESCRIPTION)) != null) {
            description = (String) session.getAttribute(UserStoreUIConstants.DESCRIPTION);
        }

        properties = userStoreConfigAdminServiceClient.getUserStoreProperties(selectedClassApplied);
        mandatories = properties.getMandatoryProperties();
        optionals = properties.getOptionalProperties();
        advancedProperties = properties.getAdvancedProperties();
    }

            out.write("\n");
            out.write("\n");
            out.write("<script type=\"text/javascript\" src=\"../carbon/admin/js/breadcrumbs.js\"></script>\n");
            out.write("<script type=\"text/javascript\" src=\"../carbon/admin/js/cookies.js\"></script>\n");
            out.write("<script type=\"text/javascript\" src=\"resources/js/main.js\"></script>\n");
            out.write("<!--Yahoo includes for dom event handling-->\n");
            out.write("<script src=\"../yui/build/yahoo-dom-event/yahoo-dom-event.js\" type=\"text/javascript\"></script>\n");
            out.write("<link href=\"../entitlement/css/entitlement.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n");
            out.write("\n");
            out.write("\n");
            out.write("<script type=\"text/javascript\">\n");
            out.write("    jQuery(document).ready(function () {\n");
            out.write("        jQuery('#domainId').keyup(function () {\n");
            out.write("                    $('#userStoreTypeSub strong').html(\n");
            out.write("                      htmlEncode($(this).val())\n");
            out.write("                    );\n");
            out.write("                }\n");
            out.write("        );\n");
            out.write("    });\n");
            out.write("\n");
            out.write("\n");
            out.write("    var allPropertiesSelected = false;\n");
            out.write("    function doSubmit() {\n");
            out.write("        if (doValidationDomainNameOnly() && doValidationDomainExistence()) {\n");
            out.write("            if (doValidationMandatoryProperties()) {\n");
            out.write("                document.dataForm.action = \"userstore-config-finish-ajaxprocessor.jsp\";\n");
            out.write("                document.dataForm.submit();\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doUpdate() {\n");
            out.write("        if (doValidateUpdate()) {\n");
            out.write("            if (doValidationMandatoryProperties()) {\n");
            out.write("                document.dataForm.action = \"userstore-config-finish-ajaxprocessor.jsp\";\n");
            out.write("                document.dataForm.submit();\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        else if (doValidationDomainNameOnly() && doValidationDomainExistence()) {\n");
            out.write("            if (doValidationMandatoryProperties()) {\n");
            out.write("                document.dataForm.action = \"userstore-config-finish-ajaxprocessor.jsp\";\n");
            out.write("                document.dataForm.submit();\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function selectAllInThisPage(isSelected) {\n");
            out.write("        allPropertiesSelected = false;\n");
            out.write("        if (document.dataForm.userStores != null &&\n");
            out.write("                document.dataForm.userStores [0] != null) { // there is more than 1 service\n");
            out.write("            if (isSelected) {\n");
            out.write("                for (var j = 0; j < document.dataForm.userStores.length; j++) {\n");
            out.write("                    document.dataForm.userStores [j].checked = true;\n");
            out.write("                }\n");
            out.write("            } else {\n");
            out.write("                for (j = 0; j < document.dataForm.userStores.length; j++) {\n");
            out.write("                    document.dataForm.userStores [j].checked = false;\n");
            out.write("                }\n");
            out.write("            }\n");
            out.write("        } else if (document.dataForm.userStores != null) { // only 1 service\n");
            out.write("            document.dataForm.userStores.checked = isSelected;\n");
            out.write("        }\n");
            out.write("        return false;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function resetVars() {\n");
            out.write("        allPropertiesSelected = false;\n");
            out.write("\n");
            out.write("        var isSelected = false;\n");
            out.write("        if (document.dataForm.userStores != null) { // there is more than 1 service\n");
            out.write("            for (var j = 0; j < document.dataForm.userStores.length; j++) {\n");
            out.write("                if (document.dataForm.userStores [j].checked) {\n");
            out.write("                    isSelected = true;\n");
            out.write("                }\n");
            out.write("            }\n");
            out.write("        } else if (document.dataForm.userStores != null) { // only 1 service\n");
            out.write("            if (document.dataForm.userStores.checked) {\n");
            out.write("                isSelected = true;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        return false;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function deleteUserStores() {\n");
            out.write("        var selected = false;\n");
            out.write("        if (document.dataForm.userStores[0] != null) { // there is more than 1 policy\n");
            out.write("            for (var j = 0; j < document.dataForm.userStores.length; j++) {\n");
            out.write("                selected = document.dataForm.userStores[j].checked;\n");
            out.write("                if (selected) break;\n");
            out.write("            }\n");
            out.write("        } else if (document.dataForm.userStores != null) { // only 1 policy\n");
            out.write("            selected = document.dataForm.userStores.checked;\n");
            out.write("        }\n");
            out.write("        if (!selected) {\n");
            out.write("            CARBON.showInfoDialog('");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            return;\n");
            out.write("        }\n");
            out.write("        if (allPropertiesSelected) {\n");
            out.write("            CARBON.showConfirmationDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\", function () {\n");
            out.write("                document.dataForm.action = \"remove-policy.jsp\";\n");
            out.write("                document.dataForm.submit();\n");
            out.write("            });\n");
            out.write("        } else {\n");
            out.write("            CARBON.showConfirmationDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\", function () {\n");
            out.write("                document.dataForm.action = \"remove-policy.jsp\";\n");
            out.write("                document.dataForm.submit();\n");
            out.write("            });\n");
            out.write("        }\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doCancel() {\n");
            out.write("        location.href = \"index.jsp\";\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function removeRow(link) {\n");
            out.write("        link.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.\n");
            out.write("                removeChild(link.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode);\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function createNewPropertyRow(name, value) {\n");
            out.write("        var rowIndex = jQuery(document.getElementById('propertiesTable').rows[document.\n");
            out.write("                getElementById('propertiesTable').rows.length - 1]).attr('data-value');\n");
            out.write("        var index = parseInt(rowIndex, 10) + 1;\n");
            out.write("        jQuery('#propertiesTable > tbody:last').append('<tr data-value=\"' + index + '\"><td><table class=\"oneline-listing\"><tr></tr><tr>' +\n");
            out.write("                '<td><input type=\"text\" name=\"expropertyName_' + index + '\" id=\"expropertyName_' + index + '\" value=\"name\"/></td>' +\n");
            out.write("                '<td><input type=\"text\" name=\"expropertyValue_' + index + '\" id=\"expropertyValue_' + index + '\" value=\"value\"/></td>' +\n");
            out.write("                '</tr><tr></tr></table></td></tr>');\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function createNewMandatoryPropertyRow() {\n");
            out.write("        var rowIndex = jQuery(document.getElementById('mandatoryPropertiesTable').rows[document.\n");
            out.write("                getElementById('mandatoryPropertiesTable').rows.length - 1]).attr('data-value');\n");
            out.write("        var index = parseInt(rowIndex, 10) + 1;\n");
            out.write("        jQuery('#mandatoryPropertiesTable > tbody:last').append('<tr data-value=\"' + index + '\"><td><table class=\"oneline-listing\"><tr></tr><tr>' +\n");
            out.write("                '<td><input type=\"text\" name=\"mpropertyName_' + index + '\" id=\"mpropertyName_' + index + '\" value=\"");
            out.print("");
            out.write("\"/></td>' +\n");
            out.write("                '<td><input type=\"text\" name=\"mpropertyValue_' + index + '\" id=\"mpropertyValue_' + index + '\" value=\"");
            out.print("");
            out.write("\"/></td>' +\n");
            out.write("                '</tr><tr></tr></table></td></tr>');\n");
            out.write("    }\n");
            out.write("\n");
            out.write("\n");
            out.write("    function getCategoryType() {\n");
            out.write("        ");

        session.setAttribute(UserStoreUIConstants.DESCRIPTION,request.getParameter(UserStoreUIConstants.DESCRIPTION));
        session.setAttribute(UserStoreUIConstants.DOMAIN,request.getParameter(UserStoreUIConstants.DOMAIN));
        
            out.write("\n");
            out.write("        document.dataForm.submit();\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doValidationDomainNameOnly() {\n");
            out.write("\n");
            out.write("        var value = document.getElementsByName(\"domainId\")[0].value;\n");
            out.write("        if (value == '') {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("        if (value.indexOf(\"_\") >= 0) {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doValidationDomainExistence() {\n");
            out.write("        var domainsArray = ");
            out.print(existingDomains);
            out.write(";\n");
            out.write("        var value = document.getElementsByName(\"domainId\")[0].value;\n");
            out.write("        if ($.inArray(value.toUpperCase(), domainsArray) != -1) {\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doValidateUpdate() {\n");
            out.write("        var value = document.getElementsByName(\"domainId\")[0].value.toUpperCase();\n");
            out.write("        var domain = \"");
            out.print(Encode.forJavaScriptBlock(domain.toUpperCase()));
            out.write("\";\n");
            out.write("        if (value.localeCompare(domain)) {\n");
            out.write("            return false;\n");
            out.write("        }\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function doValidationMandatoryProperties() {\n");
            out.write("        var length = ");
            out.print(mandatories.length);
            out.write(";\n");
            out.write("        for (var j = 1; j <= length; j++) {\n");
            out.write("            if ($.trim(document.getElementsByName(\"propertyValue_\" + j)[0].value).length == 0) {\n");
            out.write("                CARBON.showWarningDialog(document.getElementsByName(\"propertyName_\" + j)[0].value + \" \" + '");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\n");
            out.write("                return false;\n");
            out.write("            }\n");
            out.write("        }\n");
            out.write("        return true;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("    function htmlEncode(value) {\n");
            out.write("        // Create a in-memory div, set it's inner text(which jQuery automatically encodes)\n");
            out.write("        // then grab the encoded contents back out.  The div never exists on the page.\n");
            out.write("        var output = $('<div/>').text(value).html();\n");
            out.write("        output = output.replace(/\"/g,\"&quot;\");\n");
            out.write("        output = output.replace(/'/g,'&#39;');\n");
            out.write("\n");
            out.write("        return output;\n");
            out.write("    }\n");
            out.write("\n");
            out.write("\n");
            out.write("</script>\n");
            out.write("\n");
            out.write("<div id=\"middle\">\n");
            out.write("<h2>");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</h2>\n");
            out.write("\n");
            out.write("<div id=\"workArea\">\n");
            out.write("<form id=\"dataForm\" name=\"dataForm\" method=\"post\" action=\"\">\n");
            out.write("<div class=\"sectionSeperator\">");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</div>\n");
            out.write("<div class=\"sectionSub\">\n");
            out.write("    <table id=\"mainTable\">\n");
            out.write("        <tr>\n");
            out.write("            <td class=\"leftCol-small\">\n");
            out.write("                ");
            if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("            </td>\n");
            out.write("            <td>\n");
            out.write("                <select id=\"classApplied\" name=\"classApplied\" onchange=\"getCategoryType();\">\n");
            out.write("                    ");

                        for (String classApply : classApplies) {
                            if (selectedClassApplied != null && classApply.equals(selectedClassApplied)) {
                    
            out.write("\n");
            out.write("                    <option value=\"");
            out.print(Encode.forHtmlAttribute(classApply));
            out.write("\"\n");
            out.write("                    selected=\"selected\">");
            out.print(Encode.forHtmlContent(classApply));
            out.write("\n");
            out.write("                    </option>\n");
            out.write("                    ");

                    } else {
                    
            out.write("\n");
            out.write("                    <option value=\"");
            out.print(Encode.forHtmlAttribute(classApply));
            out.write('"');
            out.write('>');
            out.print(Encode.forHtmlContent(classApply));
            out.write("\n");
            out.write("                    </option>\n");
            out.write("                    ");

                            }
                        }
                    
            out.write("\n");
            out.write("                </select>\n");
            out.write("\n");
            out.write("\n");
            out.write("                <div class=\"sectionHelp\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(".\n");
            out.write("                </div>\n");
            out.write("            </td>\n");
            out.write("        </tr>\n");
            out.write("        <tr>\n");
            out.write("            <td class=\"leftCol-med\">");
            if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("<span class=\"required\">*</span></td>\n");
            out.write("            ");

                if (domain != null && domain.trim().length() > 0 && !domain.equals("0")) {
            
            out.write("\n");
            out.write("            <td><input type=\"text\" name=\"domainId\" id=\"domainId\" width=\"\"\n");
            out.write("            value=\"");
            out.print(Encode.forHtmlAttribute(domain));
            out.write("\"/></td>\n");
            out.write("            <td><input type=\"hidden\" name=\"previousDomainId\" id=\"previousDomainId\"\n");
            out.write("            value=\"");
            out.print(Encode.forHtmlAttribute(domain));
            out.write("\"/></td>\n");
            out.write("            ");

            } else {
            
            out.write("\n");
            out.write("            <td><input type=\"text\" name=\"domainId\" id=\"domainId\"/></td>\n");
            out.write("            <td><input type=\"hidden\" name=\"previousDomainId\" id=\"previousDomainId\" value=\"\"/></td>\n");
            out.write("            ");

                }
            
            out.write("\n");
            out.write("        </tr>\n");
            out.write("        <tr>\n");
            out.write("            <td>");
            if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("            ");

                if (description != null && description.trim().length() > 0) {
            
            out.write("\n");
            out.write("            <td><textarea name=\"description\" id=\"description\" class=\"text-box-big\">");
            out.print(description);
            out.write("\n");
            out.write("            </textarea>\n");
            out.write("            </td>\n");
            out.write("            ");

            } else {
            
            out.write("\n");
            out.write("            <td><textarea type=\"text\" name=\"description\" id=\"description\" class=\"text-box-big\"></textarea>\n");
            out.write("            </td>\n");
            out.write("            ");

                }
            
            out.write("\n");
            out.write("        </tr>\n");
            out.write("    </table>\n");
            out.write("</div>\n");
            out.write("    ");
            out.write("\n");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("<div class=\"sectionSeperator\" id=\"userStoreTypeSub\">");
            out.print("Define Properties For ");
            out.write("<strong></strong></div>\n");
            out.write("<div class=\"sectionSub\">\n");
            out.write("        ");
            out.write("\n");
            out.write("    ");
if (mandatories != null && mandatories[0] != null) {
            out.write("\n");
            out.write("    <table id=\"mandatoryPropertiesTable\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("        <tr data-value=\"0\">\n");
            out.write("            <td>\n");
            out.write("                <table class=\"oneline-listing\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("\n");
            out.write("                    <thead>\n");
            out.write("                    <tr>\n");
            out.write("                        <th style=\"width:20%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        <th style=\"width:30%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        <th style=\"width:50%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("                    </thead>\n");
            out.write("                    <tbody>\n");
            out.write("                    <tr></tr>\n");
            out.write("                    ");

                        i = 1;

                        isBoolean = -123;
                        for (int j = 0; j < mandatories.length; j++) {
                        	String displayName = mandatories[j].getName();
                            String propDescription = mandatories[j].getDescription();
                            int index = 0;
                            if ((index=propDescription.indexOf("#")) > -1){
                            	displayName = propDescription.substring(0,index);
                            	propDescription = propDescription.substring(index+1);

                            	if( propDescription != null ){
                            	    index=propDescription.indexOf("#");
                            	    if(index > -1 ){
                            	      propDescription = propDescription.substring(0,index);
                            	    }
                            	}
                            }

                            propertyName = displayName;
                            propertyValue = mandatories[j].getValue();
                            if (propDescription != null) {
                                description = propDescription;
                            }
                            
                            if (propertyName==null || propertyName.trim().length()==0){
                            	propertyName = mandatories[j].getName();
                            }

                            if (propertyValue != null) {
                                isBoolean = isBoolean(propertyValue);
                            }

                            String name = "propertyName_" + i;
                            String value = "propertyValue_" + i;
                    
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        ");

                            if (propertyName != null && propertyName.trim().length() > 0) {

                        
            out.write("\n");
            out.write("                        <td class=\"leftCol-med\" width=\"50%\" style=\"text-align:left;\">");
            out.print(propertyName);
            out.write("\n");
            out.write("                        <span class=\"required\">*</span></td>\n");
            out.write("                        <input type=\"hidden\" name=");
            out.print(name);
            out.write("\n");
            out.write("                        id=");
            out.print(name);
            out.write("\n");
            out.write("                        value=\"");
            out.print(mandatories[j].getName());
            out.write("\"/>\n");
            out.write("\n");
            out.write("                        ");

                        } else {
                        
            out.write("\n");
            out.write("\n");
            out.write("                        ");

                            }
                        
            out.write("\n");
            out.write("\n");
            out.write("                        <td style=\"width:30%\" style=\"text-align:left;\">\n");
            out.write("                            ");

                                if (propertyValue != null) {

                                    if (isBoolean == 1) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write("\n");
            out.write("                                   class=\"checkbox\" checked/>\n");
            out.write("                            ");

                            } else if (isBoolean == 0) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write("\n");
            out.write("                                   class=\"checkbox\"/>\n");
            out.write("                            ");

                            } else if (propertyName.endsWith("password") || propertyName.endsWith("Password")) { 
            out.write("\n");
            out.write("                            <input autocomplete=\"off\" type=\"password\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" style=\"width:95%\"\n");
            out.write("                                   value=\"");
            out.print(propertyValue);
            out.write("\"/>\n");
            out.write("                            ");

                            } else {
                            
            out.write("\n");
            out.write("                            <input type=\"text\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" style=\"width:95%\"\n");
            out.write("                                   value=\"");
            out.print(propertyValue);
            out.write("\"/>\n");
            out.write("                            ");

                                }
                            
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("                            ");

                                } else {

                                }
                            
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        <td class=\"sectionHelp\" width=\"50%\" style=\"text-align:left; !important\">\n");
            out.write("                            ");
            out.print(description);
            out.write("\n");
            out.write("                        </td>\n");
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("                    ");

                            i++;

                        }
                    
            out.write("\n");
            out.write("\n");
            out.write("                    </tbody>\n");
            out.write("                </table>\n");
            out.write("            </td>\n");
            out.write("        </tr>\n");
            out.write("    </table>\n");
            out.write("    ");

        } else {

        }
    
            out.write("\n");
            out.write("</div>\n");
            out.write("\n");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("\n");
            out.write("<script type=\"text/javascript\">\n");
            out.write("    jQuery(document).ready(function () {\n");
            out.write("\n");
            out.write("        jQuery(\"#optionalPropertyRow\").hide();\n");
            out.write("        jQuery(\"#advancedPropertyRow\").hide();\n");
            out.write("        /*Hide (Collapse) the toggle containers on load use show() instead of hide() \tin the \t\t\tabove code if you want to keep the content section expanded. */\n");
            out.write("\n");
            out.write("        jQuery(\"h2.trigger\").click(function () {\n");
            out.write("            if (jQuery(this).next().is(\":visible\")) {\n");
            out.write("                this.className = \"active trigger\";\n");
            out.write("            } else {\n");
            out.write("                this.className = \"trigger\";\n");
            out.write("            }\n");
            out.write("\n");
            out.write("            jQuery(this).next().slideToggle(\"fast\");\n");
            out.write("            return false; //Prevent the browser jump to the link anchor\n");
            out.write("        });\n");
            out.write("    });\n");
            out.write("</script>\n");
            out.write("<h2 class=\"trigger  active\"><a\n");
            out.write("        href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a></h2>\n");
            out.write("\n");
            out.write("<div class=\"toggle_container\" style=\"padding:0;margin-bottom:10px;width: 100%\" id=\"optionalPropertyRow\">\n");
            out.write("\n");
            out.write("        ");
            out.write("\n");
            out.write("    ");
if (optionals != null && optionals[0] != null) {
            out.write("\n");
            out.write("    <table id=\"propertiesTable\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("        <tr data-value=\"0\">\n");
            out.write("            <td>\n");
            out.write("                <table class=\"oneline-listing\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("                    <thead>\n");
            out.write("                    <tr>\n");
            out.write("                        <th style=\"width:20%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        <th style=\"width:30%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        <th style=\"width:50%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                    </tr>\n");
            out.write("                    </thead>\n");
            out.write("                    ");


                        isBoolean = -123;

                        for (int x = 0; x < optionals.length; x++) {
                        	
                        	String displayName = optionals[x].getName();
                            String propDescription = optionals[x].getDescription();
                            int index = 0;
                            if ((index=propDescription.indexOf("#")) > -1){
                            	displayName = propDescription.substring(0,index);
                            	propDescription = propDescription.substring(index+1);
                            }

                        	
                            propertyName = displayName;
                            propertyValue = optionals[x].getValue();
                            
                            if (propertyName==null || propertyName.trim().length()==0){
                            	propertyName = optionals[x].getName();
                            }

                            if (optionals[x].getDescription() != null) {
                                description = propDescription;
                            }
                            
                            if (propertyName==null || propertyName.trim().length()==0){
                            	propertyName = optionals[x].getName();
                            }

                            if (propertyValue != null) {
                                isBoolean = isBoolean(propertyValue);
                            }
                            String name = "propertyName_" + i;
                            String value = "propertyValue_" + i;

                    
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        ");

                            if (propertyName != null && propertyName.trim().length() > 0) {

                                if( !("UniqueID".equalsIgnoreCase(propertyName) ) ){
                        
            out.write("\n");
            out.write("                        <td class=\"leftCol-med\" width=\"50%\" style=\"text-align:left;\"\n");
            out.write("                        id=\"");
            out.print(name);
            out.write('"');
            out.write('>');
            out.print(propertyName);
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        <input type=\"hidden\" name=");
            out.print(name);
            out.write("\n");
            out.write("                        id=");
            out.print(name);
            out.write("\n");
            out.write("                        value=\"");
            out.print(optionals[x].getName());
            out.write("\"/>\n");
            out.write("                        </td>\n");
            out.write("                        <td style=\"width:30%\" style=\"text-align:left;\">\n");
            out.write("                            ");

                                if (propertyValue != null) {
                                    if (isBoolean == 1) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write("\n");
            out.write("                                   class=\"checkbox\" checked/>\n");
            out.write("\n");
            out.write("                            ");

                            } else if (isBoolean == 0) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" class=\"checkbox\"/>\n");
            out.write("                            ");


                            } else {
                            
            out.write("\n");
            out.write("                            <input type=\"text\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" style=\"width:95%\"\n");
            out.write("                                   value=\"");
            out.print(propertyValue);
            out.write("\"/>\n");
            out.write("                            ");

                                    }
                                } else {
                                    //property value null
                                }
                            
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        <td class=\"sectionHelp\" width=\"50%\" style=\"text-align:left; !important\">\n");
            out.write("                            ");
            out.print(Encode.forHtml(description));
            out.write("\n");
            out.write("                        </td>\n");
            out.write("\n");
            out.write("                    </tr>\n");
            out.write("                    ");

                                }else{
                                    messageID = propertyValue;
                                    
            out.write("\n");
            out.write("                                   <td class=\"leftCol-med\" width=\"50%\" style=\"display:none;\" id=\"");
            out.print(name);
            out.write('"');
            out.write('>');
            out.print(propertyName);
            out.write("\n");
            out.write("                                    </td>\n");
            out.write("                                    <input type=\"hidden\" name=");
            out.print(name);
            out.write("\n");
            out.write("                                    id=");
            out.print(name);
            out.write("\n");
            out.write("                                    value=\"");
            out.print(optionals[x].getName());
            out.write("\"/>\n");
            out.write("                                    </td>\n");
            out.write("                                    <td style=\"width:30%\" style=\"display:none;\">\n");
            out.write("                                        <input type=\"hidden\" name=");
            out.print(value);
            out.write("\n");
            out.write("                                        id=");
            out.print(value);
            out.write("\n");
            out.write("                                        style=\"width:95%\"\n");
            out.write("                                               value=\"");
            out.print(propertyValue);
            out.write("\"/>\n");
            out.write("\n");
            out.write("                                    </td>\n");
            out.write("                                    <td class=\"sectionHelp\" width=\"50%\" style=\"display:none;\">\n");
            out.write("                                        ");
            out.print(Encode.forHtml(description));
            out.write("\n");
            out.write("                                    </td>\n");
            out.write("                                    ");

                                }
                                i++;
                            } else {
                                //no property name
                            }
                        }
                    
            out.write("\n");
            out.write("                </table>\n");
            out.write("            </td>\n");
            out.write("        </tr>\n");
            out.write("\n");
            out.write("    </table>\n");
            out.write("    ");

        } else {
            //no optional properties
        }
    
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("</div>\n");
            out.write("\n");
            out.write("    ");
            out.write('\n');
if (advancedProperties != null && advancedProperties[0] != null) {
            out.write("\n");
            out.write("<h2 class=\"trigger  active\"><a\n");
            out.write("        href=\"#\">");
            if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a></h2>\n");
            out.write("\n");
            out.write("<div class=\"toggle_container\" style=\"padding:0;margin-bottom:10px;width: 100%\" id=\"advancedPropertyRow\">\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("    <table id=\"propertiesTable\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("        <tr data-value=\"0\">\n");
            out.write("            <td>\n");
            out.write("                <table class=\"oneline-listing\" style=\"width: 100%;margin-top:10px;\">\n");
            out.write("                    <thead>\n");
            out.write("                    <tr>\n");
            out.write("                        <th style=\"width:20%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                        <th style=\"width:80%\" style=\"text-align:left;\">");
            if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</th>\n");
            out.write("                    </tr>\n");
            out.write("                    </thead>\n");
            out.write("                    ");


                        isBoolean = -123;

                        for (int x = 0; x < advancedProperties.length; x++) {
                        	
                        	String displayName = advancedProperties[x].getName();
                            String propDescription = advancedProperties[x].getDescription();
                            int index = 0;
                            if ((index=propDescription.indexOf("#")) > -1){
                            	displayName = propDescription.substring(0,index);
                            	propDescription = propDescription.substring(index+1);
                            }

                            propertyName = displayName;
                            propertyValue = advancedProperties[x].getValue();

                            if (advancedProperties[x].getDescription() != null) {
                                description = propDescription;
                            }
                            
                            if (propertyName==null || propertyName.trim().length()==0){
                            	propertyName = advancedProperties[x].getName();
                            }

                            if (propertyValue != null) {
                                isBoolean = isBoolean(propertyValue);
                            }
                            String name = "propertyName_" + i;
                            String value = "propertyValue_" + i;
                    
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        ");

                            if (propertyName != null && propertyName.trim().length() > 0) {

                        
            out.write("\n");
            out.write("                        <td class=\"leftCol-med\" width=\"50%\" style=\"text-align:left;\"\n");
            out.write("                        id=\"");
            out.print(name);
            out.write('"');
            out.write('>');
            out.print(propertyName);
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                        <input type=\"hidden\" name=");
            out.print(name);
            out.write("\n");
            out.write("                        id=");
            out.print(name);
            out.write("\n");
            out.write("                        value=\"");
            out.print(advancedProperties[x].getName());
            out.write("\"/>\n");
            out.write("                        </td>\n");
            out.write("                        <td style=\"width:30%\" style=\"text-align:left;\">\n");
            out.write("                            ");

                                if (propertyValue != null) {
                                    if (isBoolean == 1) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" class=\"checkbox\" checked/>\n");
            out.write("\n");
            out.write("                            ");

                            } else if (isBoolean == 0) { 
            out.write("\n");
            out.write("                            <input type=\"checkbox\" name=");
            out.print(value);
            out.write("\n");
            out.write("                            id=");
            out.print(value);
            out.write(" class=\"checkbox\"/>\n");
            out.write("                            ");


                            } else {
                            
            out.write("\n");
            out.write("                            <input type=\"text\" name=");
            out.print(value);
            out.write("\n");
            out.write("                             id=");
            out.print(value);
            out.write(" style=\"width:95%\"\n");
            out.write("                                   value=\"");
            out.print(propertyValue);
            out.write("\"/>\n");
            out.write("                            ");

                                    }
                                } else {
                                    //property value null
                                }
                            
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                    ");

                                i++;
                            } else {
                                //no property name
                            }
                        }
                    
            out.write("\n");
            out.write("                </table>\n");
            out.write("            </td>\n");
            out.write("        </tr>\n");
            out.write("\n");
            out.write("    </table>\n");
            out.write("    ");

        } else {
            //no advanced properties
        }
    
            out.write("\n");
            out.write("    <input type=\"hidden\" name=\"defaultProperties\" id=\"defaultProperties\" value=");
            out.print(i);
            out.write("/>\n");
            out.write("\n");
            out.write("</div>\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("    ");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("</form>\n");
            out.write("<div class=\"buttonRow\">\n");
            out.write("\t");

		if (selectedClassApplied.matches(".*jdbc.*")) 
	{ 
            out.write("\n");
            out.write("\t<input type=\"button\" onclick=\"testConnection();\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("           class=\"button\"/>\n");
            out.write("           \n");
            out.write("    <script type=\"text/javascript\">\n");
            out.write("\t\tfunction testConnection() {\n");
            out.write("            var domainName = document.getElementById(\"domainId\").value;\n");
            out.write("            var connectionURL = document.getElementById(\"propertyValue_1\").value;\n");
            out.write("            var username = document.getElementById(\"propertyValue_2\").value;\n");
            out.write("            var connectionPassword = document.getElementById(\"propertyValue_3\").value;\n");
            out.write("            var driverName = document.getElementById(\"propertyValue_4\").value;\n");
            out.write("\n");
            out.write("            var url = 'validateconnection-ajaxprocessor.jsp?';\n");
            out.write("            var data = '&domainName=' + encodeURIComponent(domainName) +\n");
            out.write("                    '&driverName=' + encodeURIComponent(driverName) +\n");
            out.write("                    '&connectionURL=' + encodeURIComponent(connectionURL) +\n");
            out.write("                    '&username=' + encodeURIComponent(username) +\n");
            out.write("                    '&connectionPassword=' + encodeURIComponent(connectionPassword);\n");
            out.write("\n");
            out.write("            ");
if(messageID != null && !"".equals(messageID)) {
            out.write("\n");
            out.write("            url += '&messageID=");
            out.print(messageID);
            out.write("';\n");
            out.write("            ");
}
            out.write("\n");
            out.write("\n");
            out.write("            $.ajax({\n");
            out.write("                type: \"POST\",\n");
            out.write("                url: url,\n");
            out.write("                data: data,\n");
            out.write("                dataType: \"text\",\n");
            out.write("                context: document.body\n");
            out.write("            }).done(function (msg) {\n");
            out.write("                var successMsg = new RegExp(\"true\");\n");
            out.write("                if (msg.search(successMsg) == -1) //if match failed\n");
            out.write("                {\n");
            out.write("                    CARBON.showErrorDialog(msg);\n");
            out.write("                } else {\n");
            out.write("                    CARBON.showInfoDialog(\"Connection is healthy\");\n");
            out.write("                }\n");
            out.write("            }).fail(function () {\n");
            out.write("                CARBON.showErrorDialog(\"Error while testing the connection\");\n");
            out.write("            });\n");
            out.write("\t\t}\n");
            out.write("\t\t\n");
            out.write("\t\t\n");
            out.write("\t</script>\n");
            out.write("           ");
} 
            out.write("\n");
            out.write("    ");
if (isEditing) { 
            out.write("\n");
            out.write("    <input type=\"button\" onclick=\"doUpdate();\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("           class=\"button\"/>\n");
            out.write("    ");
} else {
            out.write("\n");
            out.write("    <input type=\"button\" onclick=\"doSubmit();\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f25(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("           class=\"button\"/>\n");
            out.write("    ");
}
            out.write("\n");
            out.write("    <input type=\"button\" onclick=\"doCancel();\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f26(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\n");
            out.write("           class=\"button\"/>\n");
            out.write("</div>\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("</div>\n");
            out.write("</div>\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
      }
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(262,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("select.user.stores.to.be.deleted");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(266,43) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("delete.all.user.stores.prompt");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(271,43) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("delete.user.stores.on.page.prompt");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(320,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("domain.name.is.required");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(324,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("cannot.contain.character");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(334,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("domain.already.exists");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(353,107) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("is.required");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(374,4) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("add-user.store.manager.configuration");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(378,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("user.store.manager.configuration");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(383,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("user.store.manager.class");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(407,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("user.store.manager.properties.define");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(412,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("domain.name");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(430,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("description");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(466,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("property.name");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(468,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("property.value");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(470,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("description");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(614,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("optional");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(626,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("property.name");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(628,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("property.value");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(630,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("description");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(760,17) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("advanced");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(772,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("property.name");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(774,71) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("property.value");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(883,57) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("test.connection");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(928,54) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("update");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(931,54) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("add");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    try {
      _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /userstore_config/userstore-config.jsp(934,54) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f26.setKey("cancel");
      int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
    }
    return false;
  }
}
